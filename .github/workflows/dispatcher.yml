name: Dispatcher

on: workflow_dispatch

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUST_BACKTRACE: full
  RUSTFLAGS: -D warnings
  RUSTUP_MAX_RETRIES: 10
  CARGO_PROFILE_RELEASE_CODEGEN_UNITS: 1
  CARGO_PROFILE_RELEASE_LTO: true

jobs:
  build:
    runs-on: "${{ matrix.os }}"
    strategy:
      fail-fast: true
      matrix:
        include:
          # - os: macos-latest
          #   target: aarch64-apple-darwin
          # - os: macos-latest
          #   target: x86_64-apple-darwin
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
          # - os: ubuntu-latest
          #   target: x86_64-unknown-linux-gnu
          # - os: windows-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: true

      # Cache
      - uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: "${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}"
      - uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: "${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}"
      - uses: actions/cache@v1
        with:
          path: ${{ github.workspace }}/target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Install Protoc
        uses: arduino/setup-protoc@v2

      - name: Build
        env:
          CARGO_TARGET_DIR: ${{ github.workspace }}/target
        run: |
          cd gosh-dispatcher && cargo build --verbose --release --target=${{ matrix.target }}
          ls -lA
          cd ${{ github.workspace }}
          ls -lA
          ls -lA target
          ls -lA target/${{ matrix.target }}
