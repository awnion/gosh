name: Release old

permissions:
  # TODO: once `releases: write` is supported, use it instead.
  contents: write

on:
  workflow_dispatch:
  push:
    tags:
      - v[0-9]+.*

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  # RUST_BACKTRACE: full
  # RUSTFLAGS: -D warnings
  RUSTUP_MAX_RETRIES: 10

defaults:
  run:
    shell: bash

jobs:
  create-release:
    runs-on: ubuntu-18.04
    steps:
      - uses: taiki-e/create-gh-release-action@v1
        with:
          draft: true
          changelog: CHANGELOG.md
          title: $version
          branch: main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  upload-assets:
    name: ${{ matrix.target }}
    if: github.repository_owner == 'taiki-e'
    needs:
      - create-release
    strategy:
      matrix:
        include:
          - target: aarch64-unknown-linux-gnu
          - target: x86_64-unknown-linux-gnu
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
    runs-on: ${{ matrix.os || 'ubuntu-18.04' }}
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Build
        run: |
          cd gosh-dispatcher && cargo build --release --verbose
        env:
          TARGET

      # - uses: taiki-e/github-actions/install-rust@main
      #   with:
      #     toolchain: stable
      - run: echo "RUSTFLAGS=${RUSTFLAGS} -C target-feature=+crt-static" >> "${GITHUB_ENV}"
        if: endsWith(matrix.target, 'windows-msvc')
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: cargo-hack
          target: ${{ matrix.target }}
          tar: all
          zip: windows
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CARGO_PROFILE_RELEASE_CODEGEN_UNITS: 1
          CARGO_PROFILE_RELEASE_LTO: true
